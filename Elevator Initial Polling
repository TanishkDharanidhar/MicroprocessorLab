#include "MKL25Z4.h"

#define ZERO 0xFFFFF327
#define ONE 0xFFFFF77F
#define TWO 0xFFFFF3C7
#define THREE 0xFFFFF357
#define FOUR 0xFFFFF71F
#define FIVE 0xFFFFFB17
#define SIX 0xFFFFFB07
#define SEVEN 0xFFFFF37F
#define EIGHT 0xFFFFF307
#define NINE 0xFFFFF31F

void delay_ms(uint32_t delay_in_ms) {
  SIM_SOPT2 |= 0x01000000; // Set clock source to Bus Clock
  SIM_SCGC6 |= 0x01000000; // Enable clock for TPM0

  TPM0_SC |= 0x004F; // Set prescaler to 128 

  // Calculate counter value for desired delay (adjust based on clock frequency)
  uint32_t counter_value = (SystemCoreClock / (128 * 1000)) * delay_in_ms;

  TPM0_MOD = counter_value - 1; // Set modulo register

  // Wait for the interrupt flag to be set (indicating delay completion)
  while (!(TPM0->SC & TPM_SC_TOF_MASK));

}
/*
void Init_PD_int()
{
	//NVIC_ICER0 |= (1 << (31 % 32)); // Possibly changed name
	//NVIC_ISER |= 0x80000000;
	NVIC_ClearPendingIRQ(0x80000000);
	NVIC_EnableIRQ(0x1F);
	
}
*/
void PORTD_IRQHandler()
{

}


int main(void)
{
	int curr, next = -1;
	
	SIM_SCGC5 |= 0x3F00;
	
	// gives output, 7-seg LED
	GPIOC_PDDR = 0xFFFFFFFF;
	PORTC_PCR11 = 0x00000100;
	PORTC_PCR10 = 0x00000100;
	PORTC_PCR6 = 0x00000100;
	PORTC_PCR5 = 0x00000100;
	PORTC_PCR4 = 0x00000100;
	PORTC_PCR3 = 0x00000100;
	PORTC_PCR7 = 0x00000100;
	
	
	// gives output, lift LED
	GPIOE_PDDR = 0xFFFFFFFF;
	PORTE_PCR20 = 0x00000100;
	PORTE_PCR21 = 0x00000100;
	PORTE_PCR22 = 0x00000100;
	PORTE_PCR23 = 0x00000100;
	PORTE_PCR29 = 0x00000100;
	PORTE_PCR30 = 0x00000100;
	
	// takes input, Button
	GPIOD_PDDR = 0x00000000;
	PORTD_PCR0 = 0x00090103;
	PORTD_PCR1 = 0x00090103;
	PORTD_PCR2 = 0x00090103;
	PORTD_PCR3 = 0x00090103;
	PORTD_PCR5 = 0x00090103;
	PORTD_PCR7 = 0x00090103;
	
	//NVIC_EnableIRQ(0x1F);
	
	uint32_t a;
	int position = 0;
		
		
	
		
while(1){
		a = GPIOD_PDIR;
		if(a == 0x0000008F) {
			GPIOE_PDOR = 0x40000000; 
			GPIOC_PDOR = ZERO;
		}
		if(a == 0x000000AE) {
			GPIOE_PDOR = 0x20000000; 
			
			GPIOC_PDOR = ONE;
		}
		if(a == 0x000000AB) {
			GPIOE_PDOR = 0x00800000; 
			GPIOC_PDOR = TWO;
		}
		if(a == 0x000000A7) {
			GPIOE_PDOR = 0x00400000; 
			GPIOC_PDOR = THREE;
		}
		if(a == 0x000000AD) {
			GPIOE_PDOR = 0x00200000; 
			GPIOC_PDOR = FOUR;
		}
		if(a == 0x0000002F) {
			GPIOE_PDOR = 0x00100000; 
			GPIOC_PDOR = FIVE;
		}
		
		if(a == 0x000000AF) {
			GPIOE_PDOR = 0x00000000;
		}
	}
}
